services:
  web:
    build:
      context: .
    #command: ["dockerize", "-wait", "tcp://db:3306", "-timeout", "120s", "node", "app.js"]
    command: ["dockerize", "-wait", "tcp://database-1.cncsyck2gfd6.ap-northeast-1.rds.amazonaws.com:3306", "-timeout", "120s", "node", "backend/app.js"]
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - app-network

  server:
    build:
      context: .
    command: ["dockerize", "-wait", "tcp://database-1.cncsyck2gfd6.ap-northeast-1.rds.amazonaws.com:3306", "-timeout", "120s", "node", "backend/app.js"]
    env_file:
      - .env
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - app-network

  # db:
  #   image: mysql:8.0.36
  #   env_file:
  #     - .env
  #   ports:
  #     - "3307:3306"
  #   volumes:
  #     - db_data:/var/lib/mysql 
  #   networks:
  #     - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/ubuntu/stageThree/minimal_nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

# volumes:
#   db_data: